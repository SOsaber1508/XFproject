<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fec.epreport.dao.InterFaceDao" >
    <!--评价列表查询-->
    <select id="selectEvaluates" parameterType="java.lang.Integer" resultType="java.util.HashMap">
        select u.user_id,u.wx_headimgurl,u.wx_name,u.wx_nickname,e.evaluate_id,e.evaluate_type,e.evaluate_content,e.evaluate_time
        from user u join evaluate e on u.user_id=e.evaluate_user_id WHERE e.evaluate_user_ids=#{user_id}
    </select>
    <!--好评数（货源车源）-->
    <select id="selectPraise" parameterType="java.lang.Integer" resultType="java.util.HashMap">
        select count(*) from  evaluate where evaluate_user_ids=#{user_id} and evaluate_type=0
    </select>
    <!--中评数（货源车源）-->
    <select id="selectIn" parameterType="java.lang.Integer" resultType="java.util.HashMap">
        select count(*) from  evaluate where evaluate_user_ids=#{user_id} and evaluate_type=1
    </select>
    <!--差评数（货源车源）-->
    <select id="selectDifferenc" parameterType="java.lang.Integer" resultType="java.util.HashMap">
        select count(*) from  evaluate where evaluate_user_ids=#{user_id} and evaluate_type=2
    </select>
    <!--提交评价-->
    <insert id="submissionEvaluates" parameterType="java.util.HashMap">
        insert into evaluate values(null,#{id},#{user_id},#{evaluate_type},#{evaluate_content},SYSDATE())
    </insert>
    <!--点击评价-->
    <select id="clickEvaluates" parameterType="java.lang.Integer" resultType="java.util.HashMap">
        select user_id,wx_headimgurl,wx_name,wx_nickname from user where user_id=#{user_id}
    </select>
    <!--货源详情查询-->
    <select id="selectSourceDetails" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select goods_id,goods_vehicletype,goods_length,goods_vetype,goods_type,goods_Detailedtype,goods_name,goods_number,
        goods_start,goods_end,goods_detailed,goods_contacts,goods_contactinformation,goods_loadingtime,user_id,wx_headimgurl,
        wx_name,wx_nickname,user_share
        from goods g join user u on g.goods_user_id=u.user_id where g.goods_id=#{goods_id}
    </select>
    <!--查询是否收藏此用户（货源车源）-->
    <select id="selectCollection" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select * from collection where collection_user_id = #{user_id} and collection_user_ids = #{id}
    </select>
    <!--货源列表查询-->
    <select id="selectGoods" resultType="java.util.HashMap">
        select goods_id,goods_vehicletype,goods_length,goods_name,goods_number,goods_time,
        goods_start,goods_end,goods_contacts,goods_contactinformation,goods_user_id,goods_loadingtime,user_id,wx_headimgurl,
        wx_name,wx_nickname from goods g join user u on g.goods_user_id=u.user_id
    </select>
    <!--发布货源-->
    <insert id="releaseSource" parameterType="java.util.HashMap">

    </insert>
    <!--根据条件查询货源列表-->
    <select id="selectGoodsCondition" parameterType="java.util.HashMap" resultType="java.util.HashMap">

    </select>
    <!--查询个人信息-->
    <select id="selectAUsersss" parameterType="java.lang.Integer" resultType="java.util.HashMap">
        select user_id,wx_headimgurl,wx_name,wx_nickname,user_idnumber,user_phonenumber,user_authentication,user_establish,
        user_modify,user_sex,user_address
        from user where user_id=#{user_id}
    </select>
    <!--历史发布查询-->
    <select id="selectRelease" parameterType="java.lang.Integer" resultType="java.util.HashMap">
        select goods_id as id,goods_start as start,goods_end as end,goods_length as length,goods_vehicletype as vehicletype,goods_number as loads,goods_Identification as Identification
        from (select * FROM(select goods_id,goods_start,goods_end,goods_length,goods_vehicletype,goods_number,goods_Identification,goods_user_id FROM goods union all
        select vehicle_id,vehicle_start,vehicle_end,vehicle_length,vehicle_type,vehicle_load,vehicle_Identification,vehicle_user_id FROM vehicle) as t where goods_user_id=#{user_id}) as s ORDER BY id DESC;
    </select>
    <!--完善车辆信息-->
    <insert id="perfectVehicle" parameterType="java.util.HashMap">

    </insert>
    <!--查询我的收藏信息-->
    <select id="selectMyCollection" parameterType="java.lang.Integer" resultType="java.util.HashMap">
        select collection_id,user_id,wx_headimgurl,wx_name from collection c join user u on c.collection_user_ids=u.user_id where u.user_id=#{user_id};
    </select>
    <!--个人分享信息-->
    <select id="shareInformation" parameterType="java.lang.Integer" resultType="java.util.HashMap">
        SELECT user_share,user_sharetime from user where user_id = #{user_id}
    </select>
    <!--用户简介查询（发布信息）-->
    <select id="selectAUsersRelease" parameterType="java.lang.Integer" resultType="java.util.HashMap">
        select goods_id as id,goods_start as start,goods_end as end,goods_length as length,goods_vehicletype as vehicletype,goods_number as loads,goods_Identification as Identification,goods_time as time
        from (select * FROM(select goods_id,goods_start,goods_end,goods_length,goods_vehicletype,goods_number,goods_Identification,goods_user_id,goods_time FROM goods union all
        select vehicle_id,vehicle_start,vehicle_end,vehicle_length,vehicle_type,vehicle_load,vehicle_Identification,vehicle_user_id,vehicle_releasetime FROM vehicle) as t where goods_user_id=1001) as s ORDER BY id DESC;
    </select>
    <!--用户简介中查询个人信息-->
    <select id="selectAUsers" parameterType="java.lang.Integer" resultType="java.util.HashMap">
        select user_id,wx_headimgurl,wx_name,wx_nickname,user_establish,user_authentication,user_phonenumber from user where user_id=#{user_id}
    </select>
    <!--身份认证-->
    <update id="identityAuthentication" parameterType="java.util.HashMap">
        update user set wx_name = #{wx_name},wx_nickname=#{wx_nickname},user_idnumber=#{user_idnumber},user_phonenumber=#{user_phonenumber} where user_id = #{user_id};
    </update>
    <!--查询此用户是否进行过身份认证-->
    <select id="selectidentityAuthentication" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select user_authentication from user where user_id = #{user_id}
    </select>
    <!--车源详情查询-->
    <select id="selectVehicleDetails" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select vehicle_id,vehicle_start,vehicle_end,vehicle_contacts,vehicle_contactinformation,vehicle_length,vehicle_type,vehicle_releasetime,
        vehicle_detaileddescription,vehicle_load,user_id,wx_headimgurl,wx_name,wx_nickname,user_share
        from vehicle c join user u on c.vehicle_user_id=u.user_id where c.vehicle_id=#{vehicle_id}
    </select>
    <!--车源列表查询-->
    <select id="selectVehicles" resultType="java.util.HashMap">
        select vehicle_id,vehicle_start,vehicle_end,vehicle_contacts,vehicle_contactinformation,vehicle_length,
        vehicle_type,vehicle_releasetime,vehicle_user_id,vehicle_load,user_id,wx_headimgurl,
        wx_name,wx_nickname from vehicle v join user u on v.vehicle_user_id=u.user_id
    </select>
    <!--根据条件查询车源列表-->
    <select id="selectVehiclesCondition" parameterType="java.util.HashMap" resultType="java.util.HashMap">

    </select>
    <!--发布车源-->
    <insert id="releaseCar" parameterType="java.util.HashMap">

    </insert>
	<!-- 微信相关 -->


	<!--保存微信用户授权信息 -->
	<insert id="insertWxUser"
		parameterType="com.fec.epreport.pojo.WxUser">
		insert into user
		(user_sex,wx_city,wx_province,wx_country,wx_headimgurl,user_id,wx_name,wx_openid)value
		(#{wx_sex},#{wx_city},#{wx_province},#{wx_country},#{wx_headimgurl},#{wx_id},#{wx_nickname},#{wx_openid})
	</insert>
	<!-- 查询微信是否授权该用户 -->
	<select id="selectShouQuan" resultType="int">
		SELECT count(*) from user WHERE user_id=#{wx_id}
	</select>

	<!--查询个人信息 -->
	<select id="selectAUsersss" parameterType="String"
		resultType="java.util.HashMap">
		select
		user_id,wx_headimgurl,wx_name,wx_nickname,user_idnumber,user_phonenumber,user_authentication
		from user where user_id=#{user_id}
	</select>
</mapper>